{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { LOGIN_USER, REGISTER_USER, LOGOUT_USER, UPDATE_USER_INFO, SEND_OTP, VERIFY_OTP, RUNNING_ORDER, GET_WALLET_TRANSACTIONS, SEND_PASSWORD_RESET_EMAIL, VERIFY_PASSWORD_RESET_OTP, CHANGE_USER_PASSWORD, SAVE_VAT_NUMBER } from \"./actionTypes\";\nvar initialState = {\n  user: [],\n  running_order: false,\n  wallet: [],\n  reset_mail: [],\n  validate_email_otp: [],\n  change_password: [],\n  vat_number: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case REGISTER_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case UPDATE_USER_INFO:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case SEND_OTP:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case VERIFY_OTP:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case RUNNING_ORDER:\n      return _objectSpread({}, state, {\n        running_order: action.payload\n      });\n\n    case GET_WALLET_TRANSACTIONS:\n      return _objectSpread({}, state, {\n        wallet: action.payload\n      });\n\n    case SEND_PASSWORD_RESET_EMAIL:\n      return _objectSpread({}, state, {\n        reset_mail: action.payload\n      });\n\n    case VERIFY_PASSWORD_RESET_OTP:\n      return _objectSpread({}, state, {\n        validate_email_otp: action.payload\n      });\n\n    case CHANGE_USER_PASSWORD:\n      return _objectSpread({}, state, {\n        change_password: action.payload\n      });\n\n    case SAVE_VAT_NUMBER:\n      return _objectSpread({}, state, {\n        vat_number: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\foodomaa\\src\\services\\user\\reducer.js"],"names":["LOGIN_USER","REGISTER_USER","LOGOUT_USER","UPDATE_USER_INFO","SEND_OTP","VERIFY_OTP","RUNNING_ORDER","GET_WALLET_TRANSACTIONS","SEND_PASSWORD_RESET_EMAIL","VERIFY_PASSWORD_RESET_OTP","CHANGE_USER_PASSWORD","SAVE_VAT_NUMBER","initialState","user","running_order","wallet","reset_mail","validate_email_otp","change_password","vat_number","state","action","type","payload"],"mappings":";AAAA,SACCA,UADD,EAECC,aAFD,EAGCC,WAHD,EAICC,gBAJD,EAKCC,QALD,EAMCC,UAND,EAOCC,aAPD,EAQCC,uBARD,EASCC,yBATD,EAUCC,yBAVD,EAWCC,oBAXD,EAYCC,eAZD,QAaO,eAbP;AAeA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,aAAa,EAAE,KAFK;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,UAAU,EAAE,EAJQ;AAKpBC,EAAAA,kBAAkB,EAAE,EALA;AAMpBC,EAAAA,eAAe,EAAE,EANG;AAOpBC,EAAAA,UAAU,EAAE;AAPQ,CAArB;AAUA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKtB,UAAL;AACC,+BAAYoB,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKtB,aAAL;AACC,+BAAYmB,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKrB,WAAL;AACC,+BAAYkB,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKpB,gBAAL;AACC,+BAAYiB,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKnB,QAAL;AACC,+BAAYgB,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKlB,UAAL;AACC,+BAAYe,KAAZ;AAAmBP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAAhC;;AACD,SAAKjB,aAAL;AACC,+BAAYc,KAAZ;AAAmBN,QAAAA,aAAa,EAAEO,MAAM,CAACE;AAAzC;;AACD,SAAKhB,uBAAL;AACC,+BAAYa,KAAZ;AAAmBL,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAAlC;;AACD,SAAKf,yBAAL;AACC,+BAAYY,KAAZ;AAAmBJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAAtC;;AACD,SAAKd,yBAAL;AACC,+BAAYW,KAAZ;AAAmBH,QAAAA,kBAAkB,EAAEI,MAAM,CAACE;AAA9C;;AACD,SAAKb,oBAAL;AACC,+BAAYU,KAAZ;AAAmBF,QAAAA,eAAe,EAAEG,MAAM,CAACE;AAA3C;;AACD,SAAKZ,eAAL;AACC,+BAAYS,KAAZ;AAAmBD,QAAAA,UAAU,EAAEE,MAAM,CAACE;AAAtC;;AACD;AACC,aAAOH,KAAP;AA1BF;AA4BA","sourcesContent":["import {\r\n\tLOGIN_USER,\r\n\tREGISTER_USER,\r\n\tLOGOUT_USER,\r\n\tUPDATE_USER_INFO,\r\n\tSEND_OTP,\r\n\tVERIFY_OTP,\r\n\tRUNNING_ORDER,\r\n\tGET_WALLET_TRANSACTIONS,\r\n\tSEND_PASSWORD_RESET_EMAIL,\r\n\tVERIFY_PASSWORD_RESET_OTP,\r\n\tCHANGE_USER_PASSWORD,\r\n\tSAVE_VAT_NUMBER,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n\tuser: [],\r\n\trunning_order: false,\r\n\twallet: [],\r\n\treset_mail: [],\r\n\tvalidate_email_otp: [],\r\n\tchange_password: [],\r\n\tvat_number: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_USER:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase REGISTER_USER:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase LOGOUT_USER:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase UPDATE_USER_INFO:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase SEND_OTP:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase VERIFY_OTP:\r\n\t\t\treturn { ...state, user: action.payload };\r\n\t\tcase RUNNING_ORDER:\r\n\t\t\treturn { ...state, running_order: action.payload };\r\n\t\tcase GET_WALLET_TRANSACTIONS:\r\n\t\t\treturn { ...state, wallet: action.payload };\r\n\t\tcase SEND_PASSWORD_RESET_EMAIL:\r\n\t\t\treturn { ...state, reset_mail: action.payload };\r\n\t\tcase VERIFY_PASSWORD_RESET_OTP:\r\n\t\t\treturn { ...state, validate_email_otp: action.payload };\r\n\t\tcase CHANGE_USER_PASSWORD:\r\n\t\t\treturn { ...state, change_password: action.payload };\r\n\t\tcase SAVE_VAT_NUMBER:\r\n\t\t\treturn { ...state, vat_number: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}