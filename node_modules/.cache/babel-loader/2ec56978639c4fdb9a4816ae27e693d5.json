{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport { GET_RESTAURANT_INFO, GET_RESTAURANT_INFO_BY_ID, GET_RESTAURANT_ITEMS, RESET_INFO, RESET_ITEMS, RESET_BACKUP, SINGLE_ITEM, SEARCH_ITEM, CLEAR_SEARCH, SET_FAVORITE_REST, GET_RESTAURANT_INFO_FOR_LOGGED_IN_USER } from \"./actionTypes\";\nimport { FORCE_RELOAD } from \"../helper/actionTypes\";\nimport { GET_RESTAURANT_INFO_BY_ID_URL, GET_RESTAURANT_INFO_URL, GET_RESTAURANT_ITEMS_URL, GET_SINGLE_ITEM_URL, GET_RESTAURANT_INFO_AND_OPERATIONAL_STATUS_URL, ADD_TO_FAVORITE_RESTAURANT_URL, GET_FAVORITE_RESTAURANT_FOR_LOGGED_IN_URL } from \"../../configs\";\nimport Axios from \"axios\";\nimport FuzzySearch from \"fuzzy-search\";\nexport var getRestaurantInfoAndOperationalStatus = function getRestaurantInfoAndOperationalStatus(id, latitude, longitude) {\n  return function (dispatch) {\n    return Axios.post(GET_RESTAURANT_INFO_AND_OPERATIONAL_STATUS_URL, {\n      id: id,\n      latitude: latitude,\n      longitude: longitude\n    }).then(function (response) {\n      var restaurant_info = response.data;\n      return dispatch({\n        type: GET_RESTAURANT_INFO,\n        payload: restaurant_info\n      });\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.response.status === 400) {\n        var force_reload = true;\n        return dispatch({\n          type: FORCE_RELOAD,\n          payload: force_reload\n        });\n      }\n    });\n  };\n};\nexport var getRestaurantInfo = function getRestaurantInfo(slug) {\n  return function (dispatch, getState) {\n    return Axios.post(GET_RESTAURANT_INFO_URL + \"/\" + slug).then(function (response) {\n      var restaurant_info = response.data;\n      return dispatch({\n        type: GET_RESTAURANT_INFO,\n        payload: restaurant_info\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRestaurantInfoForLoggedInUser = function getRestaurantInfoForLoggedInUser(slug) {\n  return function (dispatch, getState) {\n    return Axios.post(GET_FAVORITE_RESTAURANT_FOR_LOGGED_IN_URL + \"/\" + slug, {\n      token: getState().user.user.data.auth_token\n    }).then(function (response) {\n      var restaurant_info = response.data;\n      return dispatch({\n        type: GET_RESTAURANT_INFO_FOR_LOGGED_IN_USER,\n        payload: restaurant_info\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRestaurantInfoById = function getRestaurantInfoById(id) {\n  return function (dispatch) {\n    return Axios.post(GET_RESTAURANT_INFO_BY_ID_URL + \"/\" + id).then(function (response) {\n      var restaurant_info = response.data;\n      return dispatch({\n        type: GET_RESTAURANT_INFO_BY_ID,\n        payload: restaurant_info\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRestaurantItems = function getRestaurantItems(slug) {\n  return function (dispatch) {\n    Axios.post(GET_RESTAURANT_ITEMS_URL + \"/\" + slug).then(function (response) {\n      var restaurant_items = response.data;\n      return dispatch({\n        type: GET_RESTAURANT_ITEMS,\n        payload: restaurant_items\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getSingleItem = function getSingleItem(id) {\n  return function (dispatch) {\n    return Axios.post(GET_SINGLE_ITEM_URL, {\n      id: id\n    }).then(function (response) {\n      var item = response.data;\n      return dispatch({\n        type: SINGLE_ITEM,\n        payload: item\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var resetItems = function resetItems() {\n  return function (dispatch) {\n    var empty = [];\n    return dispatch({\n      type: RESET_ITEMS,\n      payload: empty\n    });\n  };\n};\nexport var resetBackup = function resetBackup() {\n  return function (dispatch) {\n    var empty = [];\n    return dispatch({\n      type: RESET_BACKUP,\n      payload: empty\n    });\n  };\n};\nexport var resetInfo = function resetInfo() {\n  return function (dispatch) {\n    var empty = [];\n    return dispatch({\n      type: RESET_INFO,\n      payload: empty\n    });\n  };\n};\nexport var searchItem = function searchItem(itemList, itemName, searchFoundText, noResultText) {\n  return function (dispatch, getState) {\n    var searchResultText = searchFoundText + itemName;\n    var noSearchFoundText = noResultText + itemName;\n    var foodItems = [];\n    var searcher = new FuzzySearch(itemList, [\"name\"], {\n      caseSensitive: false\n    });\n    foodItems = searcher.search(itemName);\n\n    if (foodItems.length > 0) {\n      return dispatch({\n        type: SEARCH_ITEM,\n        payload: {\n          items: _defineProperty({}, searchResultText, foodItems)\n        }\n      });\n    } else if (foodItems.length <= 0) {\n      return dispatch({\n        type: SEARCH_ITEM,\n        payload: {\n          items: _defineProperty({}, noSearchFoundText, foodItems)\n        }\n      });\n    }\n  };\n};\nexport var clearSearch = function clearSearch(data) {\n  return function (dispatch) {\n    return dispatch({\n      type: CLEAR_SEARCH,\n      payload: data\n    });\n  };\n};\nexport var setFavoriteRest = function setFavoriteRest(token, rest_id) {\n  return function (dispatch) {\n    return Axios.post(ADD_TO_FAVORITE_RESTAURANT_URL, {\n      token: token,\n      id: rest_id\n    }).then(function (response) {\n      var restaurant = response.data;\n      return dispatch({\n        type: SET_FAVORITE_REST,\n        payload: restaurant\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\xampp\\htdocs\\foodomaa\\src\\services\\items\\actions.js"],"names":["GET_RESTAURANT_INFO","GET_RESTAURANT_INFO_BY_ID","GET_RESTAURANT_ITEMS","RESET_INFO","RESET_ITEMS","RESET_BACKUP","SINGLE_ITEM","SEARCH_ITEM","CLEAR_SEARCH","SET_FAVORITE_REST","GET_RESTAURANT_INFO_FOR_LOGGED_IN_USER","FORCE_RELOAD","GET_RESTAURANT_INFO_BY_ID_URL","GET_RESTAURANT_INFO_URL","GET_RESTAURANT_ITEMS_URL","GET_SINGLE_ITEM_URL","GET_RESTAURANT_INFO_AND_OPERATIONAL_STATUS_URL","ADD_TO_FAVORITE_RESTAURANT_URL","GET_FAVORITE_RESTAURANT_FOR_LOGGED_IN_URL","Axios","FuzzySearch","getRestaurantInfoAndOperationalStatus","id","latitude","longitude","dispatch","post","then","response","restaurant_info","data","type","payload","catch","error","console","log","status","force_reload","getRestaurantInfo","slug","getState","getRestaurantInfoForLoggedInUser","token","user","auth_token","getRestaurantInfoById","getRestaurantItems","restaurant_items","getSingleItem","item","resetItems","empty","resetBackup","resetInfo","searchItem","itemList","itemName","searchFoundText","noResultText","searchResultText","noSearchFoundText","foodItems","searcher","caseSensitive","search","length","items","clearSearch","setFavoriteRest","rest_id","restaurant"],"mappings":"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","sourcesContent":["import {\r\n\tGET_RESTAURANT_INFO,\r\n\tGET_RESTAURANT_INFO_BY_ID,\r\n\tGET_RESTAURANT_ITEMS,\r\n\tRESET_INFO,\r\n\tRESET_ITEMS,\r\n\tRESET_BACKUP,\r\n\tSINGLE_ITEM,\r\n\tSEARCH_ITEM,\r\n\tCLEAR_SEARCH,\r\n\tSET_FAVORITE_REST,\r\n\tGET_RESTAURANT_INFO_FOR_LOGGED_IN_USER,\r\n} from \"./actionTypes\";\r\n\r\nimport { FORCE_RELOAD } from \"../helper/actionTypes\";\r\n\r\nimport {\r\n\tGET_RESTAURANT_INFO_BY_ID_URL,\r\n\tGET_RESTAURANT_INFO_URL,\r\n\tGET_RESTAURANT_ITEMS_URL,\r\n\tGET_SINGLE_ITEM_URL,\r\n\tGET_RESTAURANT_INFO_AND_OPERATIONAL_STATUS_URL,\r\n\tADD_TO_FAVORITE_RESTAURANT_URL,\r\n\tGET_FAVORITE_RESTAURANT_FOR_LOGGED_IN_URL,\r\n} from \"../../configs\";\r\n\r\nimport Axios from \"axios\";\r\nimport FuzzySearch from \"fuzzy-search\";\r\n\r\nexport const getRestaurantInfoAndOperationalStatus = (id, latitude, longitude) => (dispatch) => {\r\n\treturn Axios.post(GET_RESTAURANT_INFO_AND_OPERATIONAL_STATUS_URL, {\r\n\t\tid: id,\r\n\t\tlatitude: latitude,\r\n\t\tlongitude: longitude,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant_info = response.data;\r\n\t\t\treturn dispatch({ type: GET_RESTAURANT_INFO, payload: restaurant_info });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tif (error.response.status === 400) {\r\n\t\t\t\tconst force_reload = true;\r\n\t\t\t\treturn dispatch({ type: FORCE_RELOAD, payload: force_reload });\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantInfo = (slug) => (dispatch, getState) => {\r\n\treturn Axios.post(GET_RESTAURANT_INFO_URL + \"/\" + slug)\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant_info = response.data;\r\n\t\t\treturn dispatch({ type: GET_RESTAURANT_INFO, payload: restaurant_info });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantInfoForLoggedInUser = (slug) => (dispatch, getState) => {\r\n\treturn Axios.post(GET_FAVORITE_RESTAURANT_FOR_LOGGED_IN_URL + \"/\" + slug, {\r\n\t\ttoken: getState().user.user.data.auth_token,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant_info = response.data;\r\n\t\t\treturn dispatch({ type: GET_RESTAURANT_INFO_FOR_LOGGED_IN_USER, payload: restaurant_info });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantInfoById = (id) => (dispatch) => {\r\n\treturn Axios.post(GET_RESTAURANT_INFO_BY_ID_URL + \"/\" + id)\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant_info = response.data;\r\n\t\t\treturn dispatch({\r\n\t\t\t\ttype: GET_RESTAURANT_INFO_BY_ID,\r\n\t\t\t\tpayload: restaurant_info,\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantItems = (slug) => (dispatch) => {\r\n\tAxios.post(GET_RESTAURANT_ITEMS_URL + \"/\" + slug)\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant_items = response.data;\r\n\t\t\treturn dispatch({ type: GET_RESTAURANT_ITEMS, payload: restaurant_items });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getSingleItem = (id) => (dispatch) => {\r\n\treturn Axios.post(GET_SINGLE_ITEM_URL, {\r\n\t\tid: id,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst item = response.data;\r\n\t\t\treturn dispatch({ type: SINGLE_ITEM, payload: item });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const resetItems = () => (dispatch) => {\r\n\tconst empty = [];\r\n\treturn dispatch({ type: RESET_ITEMS, payload: empty });\r\n};\r\nexport const resetBackup = () => (dispatch) => {\r\n\tconst empty = [];\r\n\treturn dispatch({ type: RESET_BACKUP, payload: empty });\r\n};\r\n\r\nexport const resetInfo = () => (dispatch) => {\r\n\tconst empty = [];\r\n\treturn dispatch({ type: RESET_INFO, payload: empty });\r\n};\r\n\r\nexport const searchItem = (itemList, itemName, searchFoundText, noResultText) => (dispatch, getState) => {\r\n\tconst searchResultText = searchFoundText + itemName;\r\n\tconst noSearchFoundText = noResultText + itemName;\r\n\r\n\tlet foodItems = [];\r\n\r\n\tconst searcher = new FuzzySearch(itemList, [\"name\"], {\r\n\t\tcaseSensitive: false,\r\n\t});\r\n\tfoodItems = searcher.search(itemName);\r\n\r\n\tif (foodItems.length > 0) {\r\n\t\treturn dispatch({\r\n\t\t\ttype: SEARCH_ITEM,\r\n\t\t\tpayload: { items: { [searchResultText]: foodItems } },\r\n\t\t});\r\n\t} else if (foodItems.length <= 0) {\r\n\t\treturn dispatch({\r\n\t\t\ttype: SEARCH_ITEM,\r\n\t\t\tpayload: { items: { [noSearchFoundText]: foodItems } },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const clearSearch = (data) => (dispatch) => {\r\n\treturn dispatch({ type: CLEAR_SEARCH, payload: data });\r\n};\r\n\r\nexport const setFavoriteRest = (token, rest_id) => (dispatch) => {\r\n\treturn Axios.post(ADD_TO_FAVORITE_RESTAURANT_URL, {\r\n\t\ttoken: token,\r\n\t\tid: rest_id,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurant = response.data;\r\n\t\t\treturn dispatch({ type: SET_FAVORITE_REST, payload: restaurant });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}