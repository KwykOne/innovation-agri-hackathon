{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\foodomaa\\\\src\\\\components\\\\helpers\\\\ReactSwipeButton\\\\index.js\";\nimport React, { Component } from \"react\";\nvar slider = React.createRef();\nvar container = React.createRef();\nvar isTouchDevice = \"ontouchstart\" in document.documentElement;\n\nvar ReactSwipeButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactSwipeButton, _Component);\n\n  function ReactSwipeButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReactSwipeButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReactSwipeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.isDragging = false;\n    _this.sliderLeft = 0;\n    _this.state = {};\n\n    _this.onDrag = function (e) {\n      if (_this.unmounted || _this.state.unlocked) return;\n\n      if (_this.isDragging) {\n        if (isTouchDevice) {\n          _this.sliderLeft = Math.min(Math.max(0, e.touches[0].clientX - _this.startX), _this.containerWidth);\n        } else {\n          _this.sliderLeft = Math.min(Math.max(0, e.clientX - _this.startX), _this.containerWidth);\n        }\n\n        _this.updateSliderStyle();\n      }\n    };\n\n    _this.updateSliderStyle = function () {\n      if (_this.unmounted || _this.state.unlocked) return;\n      slider.current.style.left = _this.sliderLeft + 80 + \"px\";\n    };\n\n    _this.stopDrag = function () {\n      if (_this.unmounted || _this.state.unlocked) return;\n\n      if (_this.isDragging) {\n        _this.isDragging = false;\n\n        if (_this.sliderLeft > _this.containerWidth * 0.9) {\n          _this.sliderLeft = _this.containerWidth;\n\n          _this.onSuccess();\n\n          if (_this.props.onSuccess) {\n            _this.props.onSuccess();\n          }\n        } else {\n          _this.sliderLeft = 0;\n\n          if (_this.props.onFailure) {\n            _this.props.onFailure();\n          }\n        }\n\n        _this.updateSliderStyle();\n      }\n    };\n\n    _this.startDrag = function (e) {\n      if (_this.unmounted || _this.state.unlocked) return;\n      _this.isDragging = true;\n\n      if (isTouchDevice) {\n        _this.startX = e.touches && e.touches[0].clientX;\n      } else {\n        _this.startX = e.clientX;\n      }\n    };\n\n    _this.onSuccess = function () {\n      container.current.style.width = container.current.clientWidth + \"px\";\n\n      _this.setState({\n        unlocked: true\n      });\n    };\n\n    _this.getText = function () {\n      return _this.state.unlocked ? _this.props.text_unlocked || React.createElement(\"i\", {\n        className: \"si si-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : _this.props.text || \"Slide to Proceed\";\n    };\n\n    _this.reset = function () {\n      if (_this.unmounted) return;\n\n      _this.setState({\n        unlocked: false\n      }, function () {\n        _this.sliderLeft = 0;\n\n        _this.updateSliderStyle();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactSwipeButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (isTouchDevice) {\n        document.addEventListener(\"touchmove\", this.onDrag);\n        document.addEventListener(\"touchend\", this.stopDrag);\n      } else {\n        document.addEventListener(\"mousemove\", this.onDrag);\n        document.addEventListener(\"mouseup\", this.stopDrag);\n      }\n\n      this.containerWidth = container.current.clientWidth - 80;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.reset) {\n        this.reset();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ReactSwipeButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rsbContainer slider-bg-color \".concat(this.state.unlocked && \"rsbContainerUnlocked\"),\n        ref: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rsbcSlider\",\n        ref: slider,\n        onMouseDown: this.startDrag,\n        onTouchStart: this.startDrag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"rsbcSliderText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.getText()), React.createElement(\"span\", {\n        className: \"rsbcSliderArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rsbcText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.getText())));\n    }\n  }]);\n\n  return ReactSwipeButton;\n}(Component);\n\nexport { ReactSwipeButton as default };","map":{"version":3,"sources":["C:\\xampp\\htdocs\\foodomaa\\src\\components\\helpers\\ReactSwipeButton\\index.js"],"names":["React","Component","slider","createRef","container","isTouchDevice","document","documentElement","ReactSwipeButton","isDragging","sliderLeft","state","onDrag","e","unmounted","unlocked","Math","min","max","touches","clientX","startX","containerWidth","updateSliderStyle","current","style","left","stopDrag","onSuccess","props","onFailure","startDrag","width","clientWidth","setState","getText","text_unlocked","text","reset","addEventListener","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst slider = React.createRef();\r\nconst container = React.createRef();\r\nconst isTouchDevice = \"ontouchstart\" in document.documentElement;\r\n\r\nexport default class ReactSwipeButton extends Component {\r\n\tisDragging = false;\r\n\tsliderLeft = 0;\r\n\r\n\tstate = {};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (isTouchDevice) {\r\n\t\t\tdocument.addEventListener(\"touchmove\", this.onDrag);\r\n\t\t\tdocument.addEventListener(\"touchend\", this.stopDrag);\r\n\t\t} else {\r\n\t\t\tdocument.addEventListener(\"mousemove\", this.onDrag);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this.stopDrag);\r\n\t\t}\r\n\t\tthis.containerWidth = container.current.clientWidth - 80;\r\n\t}\r\n\r\n\tonDrag = (e) => {\r\n\t\tif (this.unmounted || this.state.unlocked) return;\r\n\t\tif (this.isDragging) {\r\n\t\t\tif (isTouchDevice) {\r\n\t\t\t\tthis.sliderLeft = Math.min(Math.max(0, e.touches[0].clientX - this.startX), this.containerWidth);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sliderLeft = Math.min(Math.max(0, e.clientX - this.startX), this.containerWidth);\r\n\t\t\t}\r\n\t\t\tthis.updateSliderStyle();\r\n\t\t}\r\n\t};\r\n\r\n\tupdateSliderStyle = () => {\r\n\t\tif (this.unmounted || this.state.unlocked) return;\r\n\t\tslider.current.style.left = this.sliderLeft + 80 + \"px\";\r\n\t};\r\n\r\n\tstopDrag = () => {\r\n\t\tif (this.unmounted || this.state.unlocked) return;\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis.isDragging = false;\r\n\t\t\tif (this.sliderLeft > this.containerWidth * 0.9) {\r\n\t\t\t\tthis.sliderLeft = this.containerWidth;\r\n\t\t\t\tthis.onSuccess();\r\n\t\t\t\tif (this.props.onSuccess) {\r\n\t\t\t\t\tthis.props.onSuccess();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.sliderLeft = 0;\r\n\t\t\t\tif (this.props.onFailure) {\r\n\t\t\t\t\tthis.props.onFailure();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.updateSliderStyle();\r\n\t\t}\r\n\t};\r\n\r\n\tstartDrag = (e) => {\r\n\t\tif (this.unmounted || this.state.unlocked) return;\r\n\t\tthis.isDragging = true;\r\n\t\tif (isTouchDevice) {\r\n\t\t\tthis.startX = e.touches && e.touches[0].clientX;\r\n\t\t} else {\r\n\t\t\tthis.startX = e.clientX;\r\n\t\t}\r\n\t};\r\n\r\n\tonSuccess = () => {\r\n\t\tcontainer.current.style.width = container.current.clientWidth + \"px\";\r\n\t\tthis.setState({\r\n\t\t\tunlocked: true,\r\n\t\t});\r\n\t};\r\n\r\n\tgetText = () => {\r\n\t\treturn this.state.unlocked\r\n\t\t\t? this.props.text_unlocked || <i className=\"si si-check\" />\r\n\t\t\t: this.props.text || \"Slide to Proceed\";\r\n\t};\r\n\r\n\treset = () => {\r\n\t\tif (this.unmounted) return;\r\n\t\tthis.setState({ unlocked: false }, () => {\r\n\t\t\tthis.sliderLeft = 0;\r\n\t\t\tthis.updateSliderStyle();\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.reset) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.unmounted = true;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ReactSwipeButton\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`rsbContainer slider-bg-color ${this.state.unlocked && \"rsbContainerUnlocked\"}`}\r\n\t\t\t\t\tref={container}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"rsbcSlider\" ref={slider} onMouseDown={this.startDrag} onTouchStart={this.startDrag}>\r\n\t\t\t\t\t\t<span className=\"rsbcSliderText\">{this.getText()}</span>\r\n\t\t\t\t\t\t<span className=\"rsbcSliderArrow\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"rsbcText\">{this.getText()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}